{
	"id": "cf74c22d947835ff4ee56947428469d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contructor2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.0;\r\ncontract A{\r\n\r\n uint _totalSupply;\r\n uint _decimals;\r\n address admin;\r\n\r\n  constructor(uint initalSupply){\r\n    _decimals = 18;\r\n    admin = msg.sender;\r\n    _totalSupply = initalSupply;\r\n  }\r\n   function getSupply()external view returns(uint){\r\n       return _totalSupply;\r\n   }\r\n\r\n}\r\n\r\n\r\n\r\ncontract B is A {\r\n  constructor( uint initalSupply, uint  _valorB) A(initalSupply){\r\n    \r\n  }\r\n\r\n  \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/contructor2.sol": {
				"A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contructor2.sol\":58:342  contract A{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contructor2.sol\":133:249  constructor(uint initalSupply){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/contructor2.sol\":182:184  18 */\n  0x12\n    /* \"contracts/contructor2.sol\":170:179  _decimals */\n  0x01\n    /* \"contracts/contructor2.sol\":170:184  _decimals = 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/contructor2.sol\":199:209  msg.sender */\n  caller\n    /* \"contracts/contructor2.sol\":191:196  admin */\n  0x02\n  0x00\n    /* \"contracts/contructor2.sol\":191:209  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/contructor2.sol\":231:243  initalSupply */\n  dup1\n    /* \"contracts/contructor2.sol\":216:228  _totalSupply */\n  0x00\n    /* \"contracts/contructor2.sol\":216:243  _totalSupply = initalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/contructor2.sol\":133:249  constructor(uint initalSupply){\r... */\n  pop\n    /* \"contracts/contructor2.sol\":58:342  contract A{\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:523   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:517   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":529:651   */\ntag_11:\n    /* \"#utility.yul\":602:626   */\n  tag_18\n    /* \"#utility.yul\":620:625   */\n  dup2\n    /* \"#utility.yul\":602:626   */\n  tag_15\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":595:600   */\n  dup2\n    /* \"#utility.yul\":592:627   */\n  eq\n    /* \"#utility.yul\":582:584   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":641:642   */\n  0x00\n    /* \"#utility.yul\":638:639   */\n  dup1\n    /* \"#utility.yul\":631:643   */\n  revert\n    /* \"#utility.yul\":582:584   */\ntag_19:\n    /* \"#utility.yul\":572:651   */\n  pop\n  jump\t// out\n    /* \"contracts/contructor2.sol\":58:342  contract A{\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contructor2.sol\":58:342  contract A{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c9c2faf\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contructor2.sol\":254:337  function getSupply()external view returns(uint){\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/contructor2.sol\":296:300  uint */\n      0x00\n        /* \"contracts/contructor2.sol\":318:330  _totalSupply */\n      dup1\n      sload\n        /* \"contracts/contructor2.sol\":311:330  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/contructor2.sol\":254:337  function getSupply()external view returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_10:\n        /* \"#utility.yul\":94:118   */\n      tag_12\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_15\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_10\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":229:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":404:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ec17e6ed1547c8c128ee4dfc885facff91e63d708be67806d512a1186c82a0f864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:654:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "512:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "572:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "629:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "641:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "631:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "631:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "595:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "620:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "602:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "602:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "592:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "592:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:43:1"
															},
															"nodeType": "YulIf",
															"src": "582:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "565:5:1",
														"type": ""
													}
												],
												"src": "529:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101ab3803806101ab8339818101604052810190610032919061009d565b601260018190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600081905550506100e7565b600081519050610097816100d0565b92915050565b6000602082840312156100af57600080fd5b60006100bd84828501610088565b91505092915050565b6000819050919050565b6100d9816100c6565b81146100e457600080fd5b50565b60b6806100f56000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80636c9c2faf14602d575b600080fd5b60336047565b604051603e9190605d565b60405180910390f35b60008054905090565b6057816076565b82525050565b6000602082019050607060008301846050565b92915050565b600081905091905056fea2646970667358221220ec17e6ed1547c8c128ee4dfc885facff91e63d708be67806d512a1186c82a0f864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1AB CODESIZE SUB DUP1 PUSH2 0x1AB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x9D JUMP JUMPDEST PUSH1 0x12 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x97 DUP2 PUSH2 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBD DUP5 DUP3 DUP6 ADD PUSH2 0x88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0xC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB6 DUP1 PUSH2 0xF5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C9C2FAF EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x57 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x70 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC OR 0xE6 0xED ISZERO SELFBALANCE 0xC8 0xC1 0x28 0xEE 0x4D 0xFC DUP9 0x5F 0xAC SELFDESTRUCT SWAP2 0xE6 RETURNDATASIZE PUSH17 0x8BE67806D512A1186C82A0F864736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "58:284:0:-:0;;;133:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;182:2;170:9;:14;;;;199:10;191:5;;:18;;;;;;;;;;;;;;;;;;231:12;216;:27;;;;133:116;58:284;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:77::-;;512:5;501:16;;491:32;;;:::o;529:122::-;602:24;620:5;602:24;:::i;:::-;595:5;592:35;582:2;;641:1;638;631:12;582:2;572:79;:::o;58:284:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80636c9c2faf14602d575b600080fd5b60336047565b604051603e9190605d565b60405180910390f35b60008054905090565b6057816076565b82525050565b6000602082019050607060008301846050565b92915050565b600081905091905056fea2646970667358221220ec17e6ed1547c8c128ee4dfc885facff91e63d708be67806d512a1186c82a0f864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C9C2FAF EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x57 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x70 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC OR 0xE6 0xED ISZERO SELFBALANCE 0xC8 0xC1 0x28 0xEE 0x4D 0xFC DUP9 0x5F 0xAC SELFDESTRUCT SWAP2 0xE6 RETURNDATASIZE PUSH17 0x8BE67806D512A1186C82A0F864736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "58:284:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;296:4;318:12;;311:19;;254:83;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:77::-;;425:5;414:16;;404:32;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getSupply()": "1115"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 133,
									"end": 249,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 182,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 179,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 209,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 191,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 191,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 231,
									"end": 243,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 243,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 216,
									"end": 243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 243,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 446,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 529,
									"end": 651,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 529,
									"end": 651,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 602,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 595,
									"end": 600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 592,
									"end": 627,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 641,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 639,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 631,
									"end": 643,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 582,
									"end": 584,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 572,
									"end": 651,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 342,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 342,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 342,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec17e6ed1547c8c128ee4dfc885facff91e63d708be67806d512a1186c82a0f864736f6c63430008000033",
									".code": [
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "6C9C2FAF"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getSupply()": "6c9c2faf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contructor2.sol\":\"A\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contructor2.sol\":{\"keccak256\":\"0x423525c5a755414f54bdbd02d9fab1ec9e781592882c877d4e9186ee03354f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://186da82bf1f8eb6ce2bded0e1631ee7f1d8edacf5921ea161e088395ffec5695\",\"dweb:/ipfs/QmYEvsWGXvRRBQuL1ZT6iPXjtwCSwySsy7am1VCs3E9uup\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/contructor2.sol:A",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/contructor2.sol:A",
								"label": "_decimals",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/contructor2.sol:A",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"B": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_valorB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contructor2.sol\":350:454  contract B is A {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contructor2.sol\":371:445  constructor( uint initalSupply, uint  _valorB) A(initalSupply){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/contructor2.sol\":420:432  initalSupply */\n  dup2\n    /* \"contracts/contructor2.sol\":182:184  18 */\n  0x12\n    /* \"contracts/contructor2.sol\":170:179  _decimals */\n  0x01\n    /* \"contracts/contructor2.sol\":170:184  _decimals = 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/contructor2.sol\":199:209  msg.sender */\n  caller\n    /* \"contracts/contructor2.sol\":191:196  admin */\n  0x02\n  0x00\n    /* \"contracts/contructor2.sol\":191:209  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/contructor2.sol\":231:243  initalSupply */\n  dup1\n    /* \"contracts/contructor2.sol\":216:228  _totalSupply */\n  0x00\n    /* \"contracts/contructor2.sol\":216:243  _totalSupply = initalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/contructor2.sol\":133:249  constructor(uint initalSupply){\r... */\n  pop\n    /* \"contracts/contructor2.sol\":371:445  constructor( uint initalSupply, uint  _valorB) A(initalSupply){\r... */\n  pop\n  pop\n    /* \"contracts/contructor2.sol\":350:454  contract B is A {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:596   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:262   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":308:309   */\n  0x00\n    /* \"#utility.yul\":305:306   */\n  dup1\n    /* \"#utility.yul\":298:310   */\n  revert\n    /* \"#utility.yul\":260:262   */\ntag_15:\n    /* \"#utility.yul\":351:352   */\n  0x00\n    /* \"#utility.yul\":376:440   */\n  tag_16\n    /* \"#utility.yul\":432:439   */\n  dup6\n    /* \"#utility.yul\":423:429   */\n  dup3\n    /* \"#utility.yul\":412:421   */\n  dup7\n    /* \"#utility.yul\":408:430   */\n  add\n    /* \"#utility.yul\":376:440   */\n  tag_10\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":366:440   */\n  swap3\n  pop\n    /* \"#utility.yul\":322:450   */\n  pop\n    /* \"#utility.yul\":489:491   */\n  0x20\n    /* \"#utility.yul\":515:579   */\n  tag_17\n    /* \"#utility.yul\":571:578   */\n  dup6\n    /* \"#utility.yul\":562:568   */\n  dup3\n    /* \"#utility.yul\":551:560   */\n  dup7\n    /* \"#utility.yul\":547:569   */\n  add\n    /* \"#utility.yul\":515:579   */\n  tag_10\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":505:579   */\n  swap2\n  pop\n    /* \"#utility.yul\":460:589   */\n  pop\n    /* \"#utility.yul\":250:596   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":602:679   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":668:673   */\n  dup2\n    /* \"#utility.yul\":657:673   */\n  swap1\n  pop\n    /* \"#utility.yul\":647:679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":685:807   */\ntag_13:\n    /* \"#utility.yul\":758:782   */\n  tag_21\n    /* \"#utility.yul\":776:781   */\n  dup2\n    /* \"#utility.yul\":758:782   */\n  tag_18\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":751:756   */\n  dup2\n    /* \"#utility.yul\":748:783   */\n  eq\n    /* \"#utility.yul\":738:740   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":794:795   */\n  dup1\n    /* \"#utility.yul\":787:799   */\n  revert\n    /* \"#utility.yul\":738:740   */\ntag_22:\n    /* \"#utility.yul\":728:807   */\n  pop\n  jump\t// out\n    /* \"contracts/contructor2.sol\":350:454  contract B is A {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contructor2.sol\":350:454  contract B is A {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c9c2faf\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contructor2.sol\":254:337  function getSupply()external view returns(uint){\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/contructor2.sol\":296:300  uint */\n      0x00\n        /* \"contracts/contructor2.sol\":318:330  _totalSupply */\n      dup1\n      sload\n        /* \"contracts/contructor2.sol\":311:330  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/contructor2.sol\":254:337  function getSupply()external view returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_10:\n        /* \"#utility.yul\":94:118   */\n      tag_12\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_15\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_10\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":229:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":404:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122018a8bd66104f0988065494f177856f4dfd9d6f1f1c7ebbfcb17f21429fb0c21264736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:810:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:346:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:1"
															},
															"nodeType": "YulIf",
															"src": "260:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "322:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "337:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "351:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "341:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "366:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "412:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "423:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "408:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "408:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "432:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "376:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "366:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "460:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "475:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "489:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "479:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "505:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "551:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "562:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "547:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "547:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "571:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "515:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "505:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:1",
														"type": ""
													}
												],
												"src": "156:440:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "647:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "657:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "668:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "657:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "629:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "639:7:1",
														"type": ""
													}
												],
												"src": "602:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "728:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "785:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "794:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "787:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "787:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "787:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "751:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "776:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "758:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "758:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "748:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "741:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "741:43:1"
															},
															"nodeType": "YulIf",
															"src": "738:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:1",
														"type": ""
													}
												],
												"src": "685:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101c13803806101c1833981810160405281019061003291906100a0565b81601260018190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000819055505050506100fd565b60008151905061009a816100e6565b92915050565b600080604083850312156100b357600080fd5b60006100c18582860161008b565b92505060206100d28582860161008b565b9150509250929050565b6000819050919050565b6100ef816100dc565b81146100fa57600080fd5b50565b60b68061010b6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80636c9c2faf14602d575b600080fd5b60336047565b604051603e9190605d565b60405180910390f35b60008054905090565b6057816076565b82525050565b6000602082019050607060008301846050565b92915050565b600081905091905056fea264697066735822122018a8bd66104f0988065494f177856f4dfd9d6f1f1c7ebbfcb17f21429fb0c21264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C1 CODESIZE SUB DUP1 PUSH2 0x1C1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xA0 JUMP JUMPDEST DUP2 PUSH1 0x12 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0xFD JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9A DUP2 PUSH2 0xE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP6 DUP3 DUP7 ADD PUSH2 0x8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD2 DUP6 DUP3 DUP7 ADD PUSH2 0x8B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF DUP2 PUSH2 0xDC JUMP JUMPDEST DUP2 EQ PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB6 DUP1 PUSH2 0x10B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C9C2FAF EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x57 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x70 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xA8 0xBD PUSH7 0x104F0988065494 CALL PUSH24 0x856F4DFD9D6F1F1C7EBBFCB17F21429FB0C21264736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "350:104:0:-:0;;;371:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;420:12;182:2;170:9;:14;;;;199:10;191:5;;:18;;;;;;;;;;;;;;;;;;231:12;216;:27;;;;133:116;371:74;;350:104;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:440::-;;;292:2;280:9;271:7;267:23;263:32;260:2;;;308:1;305;298:12;260:2;351:1;376:64;432:7;423:6;412:9;408:22;376:64;:::i;:::-;366:74;;322:128;489:2;515:64;571:7;562:6;551:9;547:22;515:64;:::i;:::-;505:74;;460:129;250:346;;;;;:::o;602:77::-;;668:5;657:16;;647:32;;;:::o;685:122::-;758:24;776:5;758:24;:::i;:::-;751:5;748:35;738:2;;797:1;794;787:12;738:2;728:79;:::o;350:104:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80636c9c2faf14602d575b600080fd5b60336047565b604051603e9190605d565b60405180910390f35b60008054905090565b6057816076565b82525050565b6000602082019050607060008301846050565b92915050565b600081905091905056fea264697066735822122018a8bd66104f0988065494f177856f4dfd9d6f1f1c7ebbfcb17f21429fb0c21264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C9C2FAF EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x57 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x70 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xA8 0xBD PUSH7 0x104F0988065494 CALL PUSH24 0x856F4DFD9D6F1F1C7EBBFCB17F21429FB0C21264736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "350:104:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;296:4;318:12;;311:19;;254:83;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:77::-;;425:5;414:16;;404:32;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getSupply()": "1115"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 350,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 420,
									"end": 432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 182,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 179,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 209,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 191,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 191,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 191,
									"end": 209,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 231,
									"end": 243,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 243,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 216,
									"end": 243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 243,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 133,
									"end": 249,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 350,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 596,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 262,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 260,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 262,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 308,
									"end": 309,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 298,
									"end": 310,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 262,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 262,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 351,
									"end": 352,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 432,
									"end": 439,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 423,
									"end": 429,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 412,
									"end": 421,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 408,
									"end": 430,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 376,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 366,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 366,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 322,
									"end": 450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 489,
									"end": 491,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 571,
									"end": 578,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 562,
									"end": 568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 551,
									"end": 560,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 547,
									"end": 569,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 515,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 505,
									"end": 579,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 505,
									"end": 579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 460,
									"end": 589,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 602,
									"end": 679,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 602,
									"end": 679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 668,
									"end": 673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 679,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 679,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 685,
									"end": 807,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 685,
									"end": 807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 758,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 776,
									"end": 781,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 758,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 756,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 748,
									"end": 783,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 738,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 738,
									"end": 740,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 794,
									"end": 795,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 787,
									"end": 799,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 738,
									"end": 740,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 738,
									"end": 740,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 728,
									"end": 807,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 728,
									"end": 807,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 350,
									"end": 454,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 350,
									"end": 454,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 350,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 454,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018a8bd66104f0988065494f177856f4dfd9d6f1f1c7ebbfcb17f21429fb0c21264736f6c63430008000033",
									".code": [
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "6C9C2FAF"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getSupply()": "6c9c2faf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valorB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contructor2.sol\":\"B\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contructor2.sol\":{\"keccak256\":\"0x423525c5a755414f54bdbd02d9fab1ec9e781592882c877d4e9186ee03354f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://186da82bf1f8eb6ce2bded0e1631ee7f1d8edacf5921ea161e088395ffec5695\",\"dweb:/ipfs/QmYEvsWGXvRRBQuL1ZT6iPXjtwCSwySsy7am1VCs3E9uup\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/contructor2.sol:B",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/contructor2.sol:B",
								"label": "_decimals",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/contructor2.sol:B",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contructor2.sol": {
				"ast": {
					"absolutePath": "contracts/contructor2.sol",
					"exportedSymbols": {
						"A": [
							35
						],
						"B": [
							49
						]
					},
					"id": 50,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "A",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "74:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "74:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "95:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "95:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "113:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "163:86:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "170:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "182:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "170:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "170:14:0"
											},
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "191:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 17,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "199:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "199:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "191:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "191:18:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "216:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 22,
														"name": "initalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "231:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "216:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "216:27:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "initalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "145:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "144:19:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:0:0"
									},
									"scope": 35,
									"src": "133:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "301:36:0",
										"statements": [
											{
												"expression": {
													"id": 31,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "318:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 30,
												"id": 32,
												"nodeType": "Return",
												"src": "311:19:0"
											}
										]
									},
									"functionSelector": "6c9c2faf",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "296:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "296:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:6:0"
									},
									"scope": 35,
									"src": "254:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "58:284:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 36,
										"name": "A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 35,
										"src": "364:1:0"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "364:1:0"
								}
							],
							"contractDependencies": [
								35
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 49,
							"linearizedBaseContracts": [
								49,
								35
							],
							"name": "B",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "433:12:0",
										"statements": []
									},
									"id": 48,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 44,
													"name": "initalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 39,
													"src": "420:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 45,
											"modifierName": {
												"id": 43,
												"name": "A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 35,
												"src": "418:1:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "418:15:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "initalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "384:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "_valorB",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:35:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:0:0"
									},
									"scope": 49,
									"src": "371:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 50,
							"src": "350:104:0"
						}
					],
					"src": "33:421:0"
				},
				"id": 0
			}
		}
	}
}